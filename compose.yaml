services:
  django:
    build:
      dockerfile: Dockerfile.django
    container_name: django
    # disable restart to avoid autostart containers on boot
    restart: no
    # volume used to hot reload changes
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    environment:
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      SECRET_KEY: ${DJANGO_SECRET_KEY}
      STRIPE_PUBLISHABLE_KEY: ${STRIPE_PUBLISHABLE_KEY}
      STRIPE_SECRET_KEY: ${STRIPE_SECRET_KEY}
    depends_on:
      db:
        condition: service_healthy

  tailwind:
    build:
      dockerfile: Dockerfile.tailwind
    container_name: tailwind
    # disable restart to avoid autostart containers on boot
    restart: no
    # Fix tailwindcss script exiting even if using --watch
    tty: true
    # volume used to hot reload changes
    volumes:
      - .:/app
    stop_grace_period: 0.1s

  db:
    image: postgres:16.2
    container_name: db
    # disable restart to avoid autostart containers on boot
    restart: no
    # set shared memory limit when using docker-compose
    shm_size: 128mb
    environment:
      POSTGRES_DB: ${DB_NAME} 
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      #PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "${DB_PORT}:5432"
    # ENABLE IN PRODUCTION
    # volumes:
      # - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 1s
      timeout: 5s
      retries: 10

  adminer:
    image: adminer
    container_name: adminer
    # disable restart to avoid autostart containers on boot
    restart: no
    ports:
      - "8080:8080"

# ENABLE IN PRODUCTION
# volumes:
  # pgdata:
